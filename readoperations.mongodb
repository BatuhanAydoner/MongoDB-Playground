use('movies')

db.movies.find({"rating.average": {$gt: 9.3}})

db.movies.find({"genres": "Supernatural"})

db.movies.find({"network.id": 4})

db.movies.find({runtime: {$in: [20, 60]}})

db.movies.find({$or: [{"rating.average": {$gt: 7}}, {"rating.average": {$lt: 4}}]}).count()
db.movies.find({$nor: [{"rating.average": {$gt: 7}}, {"rating.average": {$lt: 4}}]}).count()

db.movies.find({$and: [{"rating.average": {$gt: 9}}, {"rating.average": {$lt: 9.4}}]}).count()

db.movies.find({"rating.average": {$not: {$gt: 5}}})

db.movies.find({"rating.average": {$exists: true, $eq: null}}).count()

db.movies.find({runtime: {$type: ['string', 'number']}})

db.movies.find({summary: {$regex: /musical/}})

db.movies.find({$expr: {$gt: [{$multiply: ["$rating.average", 10]}, "$runtime"]}})

db.movies.find({$expr: {$gt: [{$cond: {if: {$gte: ["$runtime", 40]}, then: {$subtract: ["$runtime", 20]}, else: "$runtime"}}, {$multiply: ["$rating.average", 10]}]}}).count()

db.movies.find({"schedule.days": {$size: 1}}).count()

db.movies.find({genres: {$all: ["Drama", "Supernatural", "Crime"]}})

db.movies.find({"network": {$elemMatch: {id: 1, name: "NBC", country: {name: "United States", "code": "US", timezone: "America/New_York"}}}})

const dataCursor = db.movies.find()
dataCursor.next()
dataCursor.next()

db.movies.find().sort({"rating.average": 1})
db.movies.find().sort({"rating.average": -1})

db.movies.find().sort({"rating.average": 1, runtime: 1}).skip(239).limit(1)

db.movies.find({}, {name: 1, genres: 1, "_id": 0})
db.movies.find({genres: "Drama"}, {"genres.$": 1})
db.movies.find({genres: "Drama"}, {genres: {$elemMatch: {$eq: "Horror"}}})

db.movies.find({}, {genres: {$slice: 2}, name: 1})
db.movies.find({}, {genres: {$slice: [0, 2]}, name: 1})
